---
- package:
    name: kernel-3.10.0-862.3.2.el7.x86_64
    state: absent
    register: command_result
    failed_when: "'No Packages marked for removal' in command_result.stderr"
  ignore_errors: yes

- name: perform system update
  package:
    name: '*'
    state: latest

- name: reboot if kernel has been updated
  shell: if [ $(rpm -q kernel|tail -n 1) != kernel-$(uname -r) ]; then echo 'reboot'; else echo 'no'; fi
  ignore_errors: true
  register: reboot_hint

- name: perform a reboot
  shell: sleep 2 && shutdown -r now "Reboot triggered by ansible"
  async: 1
  poll: 0
  become: false
  ignore_errors: True
  when: reboot_hint.stdout.find('reboot') != -1
  register: rebooting

- name: wait for the system to complete the reboot
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: rebooting.changed

#- name: download epel repo rpm
#  get_url:
#    url: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
#    dest: "/root/epel-release-latest-{{ ansible_distribution_major_version}}.noarch.rpm"

- name: install epel-release
  package: name=epel-release state=present

- name: install additional packages
  package:
    name={{ item }} state=present update_cache=yes
  with_items:
    - vim
    - telnet
    - net-tools
    - bind-utils
    - yum-utils
    - nmap
    - bash-completion
    - python-setuptools

- name: install pip
  easy_install: name=pip state=latest

- name: install ntp
  package:
    name: "{{ ntp_package }}"
    state: present
    update_cache: yes
  tags: ntp

- name: use template file as ntp.conf
  template: src=templates/ntp.conf.j2 dest=/etc/ntp.conf
  notify:
    - restart ntp service
  tags: ntp

- name: glusterfs backup script
  copy:
    src: "{{ role_path }}/files/glusterfs-backup.sh"
    dest: /root/glusterfs-backup.sh

- name: backup glusterfs configuration
  cron:
    user: "root"
    minute: "0"
    hour: "22"
    job: "/root/glusterfs-backup.sh"
    state: present
